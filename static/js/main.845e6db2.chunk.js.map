{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","this","props","value","name","toLocaleTimeString","React","Component","App","timerId","state","date","Date","isClockVisible","clockName","handleRandomName","setState","getRandomIntInclusive","window","setInterval","tick","_prevProps","prevState","console","log","clearInterval","className","type","onClick","min","max","newMin","Math","ceil","newMax","floor","random","ReactDOM","render","document","getElementById"],"mappings":"8MAQqBA,E,4JACnB,WACE,OAAOC,KAAKC,MAAMC,OAChB,qCACE,uCAEG,IACAF,KAAKC,MAAME,QAEd,8CAEG,IACAH,KAAKC,MAAMC,MAAME,+B,GAZOC,IAAMC,WCHpBC,G,kNACXC,QAAU,E,EAElBC,MAAQ,CACNC,KAAM,IAAIC,KACVC,gBAAgB,EAChBC,UAAW,G,EAgCbC,iBAAmB,WACjB,EAAKC,SAAS,CAAEF,UAAWN,EAAIS,sBAAsB,EAAG,Q,uDA9B1D,WAAqB,IAAD,OAClBhB,KAAKQ,QAAUS,OAAOC,aAAY,kBAAM,EAAKC,SAAQ,O,gCAGvD,SAAmBC,EAAqBC,GAClCrB,KAAKS,MAAMG,iBACTZ,KAAKS,MAAMI,YAAcQ,EAAUR,WACrCS,QAAQC,IAAR,qCAA0CF,EAAUR,UAApD,eAAoEb,KAAKS,MAAMI,YAG7Eb,KAAKS,MAAMC,OAASW,EAAUX,MAChCY,QAAQC,IAAIvB,KAAKS,MAAMC,KAAKN,yB,kCAKlC,WACEoB,cAAcxB,KAAKQ,W,kBAgBrB,WACER,KAAKe,SAAS,CAAEL,KAAM,IAAIC,S,oBAG5B,WAAU,IAAD,OACCC,EAAmBZ,KAAKS,MAAxBG,eAER,OACE,sBAAKa,UAAU,MAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKZ,SAAS,CAAEH,gBAAgB,KAFjD,wBAMC,IACD,wBACEc,KAAK,SACLC,QAAS,kBAAM,EAAKZ,SAAS,CAAEH,gBAAgB,KAFjD,wBAMC,IACD,wBACEc,KAAK,SACLC,QAAS3B,KAAKc,iBAFhB,6BAMCF,GACI,cAAC,EAAD,CAAOV,MAAOF,KAAKS,MAAMC,KAAMP,KAAMH,KAAKS,MAAMI,kB,oCA3C3D,SAA6Be,EAAaC,GACxC,IAAMC,EAASC,KAAKC,KAAKJ,GACnBK,EAASF,KAAKG,MAAML,GAE1B,OAAOE,KAAKG,MACVH,KAAKI,UAAYF,EAASH,EAAS,GAAKA,O,GAlCbzB,IAAMC,YCFvC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.845e6db2.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\n\ntype Props = {\n  value: Date,\n  name: number\n};\n\nexport default class Clock extends React.Component<Props> {\n  render() {\n    return this.props.value && (\n      <>\n        <h1>\n          clock\n          {' '}\n          {this.props.name}\n        </h1>\n        <p>\n          Current time:\n          {' '}\n          {this.props.value.toLocaleTimeString()}\n        </p>\n      </>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport Clock from './Clock';\nimport './App.scss';\n\nexport default class App extends React.Component {\n  private timerId = 0;\n\n  state = {\n    date: new Date(),\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => this.tick(), 1000);\n  }\n\n  componentDidUpdate(_prevProps: unknown, prevState: { date: Date, clockName: number; }) {\n    if (this.state.isClockVisible) {\n      if (this.state.clockName !== prevState.clockName) {\n        console.log(`The Clock was renamed from ${prevState.clockName} to ${this.state.clockName}`);\n      }\n\n      if (this.state.date !== prevState.date) {\n        console.log(this.state.date.toLocaleTimeString());\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  static getRandomIntInclusive(min: number, max: number) {\n    const newMin = Math.ceil(min);\n    const newMax = Math.floor(max);\n\n    return Math.floor(\n      Math.random() * (newMax - newMin + 1) + newMin,\n    ); // The maximum is inclusive and the minimum is inclusive\n  }\n\n  handleRandomName = () => {\n    this.setState({ clockName: App.getRandomIntInclusive(0, 100) });\n  };\n\n  tick() {\n    this.setState({ date: new Date() });\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show clock\n        </button>\n        {' '}\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide clock\n        </button>\n        {' '}\n        <button\n          type=\"button\"\n          onClick={this.handleRandomName}\n        >\n          Set random name\n        </button>\n        {isClockVisible\n          && <Clock value={this.state.date} name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}